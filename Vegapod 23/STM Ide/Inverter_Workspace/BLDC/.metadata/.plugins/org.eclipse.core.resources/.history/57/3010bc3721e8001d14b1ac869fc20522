/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */
/* Includes ------------------------------------------------------------------*/
#include "main.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/
UART_HandleTypeDef huart1;

/* USER CODE BEGIN PV */
uint8_t data[2000];

uint8_t count =0;
UART_HandleTypeDef huart1;
uint8_t TX1_Char = 0x00;
uint8_t RX1_Char = 0x00;
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_USART1_UART_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
	HAL_UART_Transmit_IT(&huart1, &TX1_Char, 1);
	HAL_UART_Receive_IT(&huart1, &RX1_Char, 1);
}

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  uint8_t MSG1[] = "Button State: Released\r\n";
  uint8_t MSG2[] = "Button State: Pressed\r\n";

  HAL_Init();
  SystemClock_Config();
  MX_GPIO_Init();
  MX_USART1_UART_Init();
  HAL_UART_Receive_IT(&huart1, &RX1_Char, 1);

  while (1)  {
	    //--------[ Read The Button State & Send It Via UART ]---------
	    if(HAL_GPIO_ReadPin (GPIOB, RX1_Char))
	    {
	      HAL_UART_Transmit(&huart1, MSG2, sizeof(MSG2), 100);
	    }
	    else
	    {
	      HAL_UART_Transmit(&huart1, MSG1, sizeof(MSG1), 100);
	    }
	    //--------[ Read The Received Character & Toggle LEDs Accordingly ]--------
	    if(RX1_Char == '1')
	    {
	          HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_12);
	      HAL_UART_Receive_IT(&huart1, &RX1_Char, 1);
	      RX1_Char = 0x00;
	    }
	    if(RX1_Char == '2')
	    {
	      HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_13);
	      HAL_UART_Receive_IT(&huart1, &RX1_Char, 1);
	      RX1_Char = 0x00;
	    }
	    HAL_Delay(100);
	  }
	}
